
server:
  port: ${SPRING_APPLICATION_PORT:9000}

logging:
  level:
    root: INFO
    org:
      springframework:
        web: INFO
        security: INFO
        security.oauth2: TRACE

spring:
  application:
    name: ${SPRING_APPLICATION_NAME:auth-service}
  #  data:
  #    mongodb:
  #      host: ${MONGO_DB_HOST:auth-mongodb}
  #      port: ${MONGO_DB_PORT:27017}
  #      username: ${MONGO_DB_USERNAME:user}
  #      password: ${MONGO_DB_PASSWORD:password}
  #      database: ${MONGO_DB:piggymetrics}
  security:
    oauth2:
      authorizationserver:
        client:
          account-client-oauth2:
            registration:
              client-id: ${OAUTH2_ACCOUNT_CLIENT_ID:account-client}
              client-secret: ${OAUTH2_ACCOUNT_CLIENT_SECRET:{noop}secret-account}
              client-authentication-methods: ${OAUTH2_ACCOUNT_CLIENT_AUTHENTICATION_METHODS:client_secret_basic}
              authorization-grant-types: ${OAUTH2_ACCOUNT_CLIENT_AUTHORIZATION_GRANT_TYPES:client_credentials}
              scopes: ${OAUTH2_ACCOUNT_CLIENT_SCOPES:openid, profile, account.read, account.write}
          notification-client-oauth2:
            registration:
              client-id: ${OAUTH2_NOTIFICATION_CLIENT_ID:notification-client}
              client-secret: ${OAUTH2_NOTIFICATION_CLIENT_SECRET:{noop}secret-notification}
              client-authentication-methods: ${OAUTH2_NOTIFICATION_CLIENT_AUTHENTICATION_METHODS:client_secret_basic}
              authorization-grant-types: ${OAUTH2_NOTIFICATION_CLIENT_AUTHORIZATION_GRANT_TYPES:client_credentials}
              scopes: ${OAUTH2_NOTIFICATION_CLIENT_SCOPES:openid, profile, notification.read, notification.write}
          experience-client-oauth2:
            registration:
              client-id: ${OAUTH2_EXPERIENCE_CLIENT_ID:experience-client}
              client-secret: ${OAUTH2_EXPERIENCE_CLIENT_SECRET:{noop}secret-experience}
              client-authentication-methods: ${OAUTH2_EXPERIENCE_CLIENT_AUTHENTICATION_METHODS:client_secret_basic}
              authorization-grant-types: ${OAUTH2_EXPERIENCE_CLIENT_AUTHORIZATION_GRANT_TYPES:authorization_code, client_credentials}
#              redirect-uris: ${OAUTH2_EXPERIENCE_CLIENT_REDIRECT_URIS:http://experience:8080/login/oauth2/code/experience-client-oauth2-authorization-code}
              redirect-uris: ${OAUTH2_EXPERIENCE_CLIENT_REDIRECT_URIS:http://localhost:8000/login/oauth2/code/experience-client-oauth2-authorization-code}
              scopes: ${OAUTH2_EXPERIENCE_CLIENT_SCOPES:openid, profile, experience.read, experience.write}

#eureka:
#  client:
#    serviceUrl:
#      defaultZone: ${REGISTRY_URI:http://localhost:8761}/eureka/